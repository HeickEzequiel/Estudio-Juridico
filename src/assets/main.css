@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&display=swap');

/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root,
[data-theme]{
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0 0 0)){

  :root{
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-bs: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark){

    :root{
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-bs: #989eab;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html{
  -webkit-tap-highlight-color: transparent;
}

[class*="icon-[tabler--"]{
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
}

.icon-\[tabler--check\]{
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
}

.icon-\[tabler--trash\]{
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
}

:root{
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

@media (prefers-color-scheme: dark){

  :root{
    color-scheme: dark;
    --rounded-box: 0.5rem ;
    --rounded-btn: 0.375rem;
    --rounded-tooltip: 0.25rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 57.5934% 0.247012 287.240256;
    --pc: 93.7482% 0.032368 291.504163;
    --s: 55.7871% 0.022138 301.905408;
    --sc: 100% 0 0;
    --a: 62.3083% 0.188015 259.814527;
    --ac: 93.1918% 0.031591 255.585479;
    --n: 65.7482% 0.022235 294.952787;
    --nc: 18.5128% 0.016696 301.919165;
    --b1: 26.8442% 0.028285 299.769973;
    --b2: 22.6865% 0.023344 295.952775;
    --b3: 39.9632% 0.030791 300.243852;
    --bc: 78.094% 0.014175 295.24394;
    --bs: 18.5128% 0.016696 301.919165;
    --in: 71.4837% 0.125737 215.220903;
    --inc: 95.6262% 0.044329 203.387778;
    --su: 73.1062% 0.216656 147.043973;
    --suc: 96.444% 0.02867 172.082912;
    --wa: 79.8713% 0.164239 73.09399;
    --wac: 98.4165% 0.02418 94.061776;
    --er: 65.3932% 0.222085 25.863858;
    --erc: 97.5752% 0.015143 61.349242;
  }
}

[data-theme=light]{
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

[data-theme=dark]{
  color-scheme: dark;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 100% 0 0;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 65.7482% 0.022235 294.952787;
  --nc: 18.5128% 0.016696 301.919165;
  --b1: 26.8442% 0.028285 299.769973;
  --b2: 22.6865% 0.023344 295.952775;
  --b3: 39.9632% 0.030791 300.243852;
  --bc: 78.094% 0.014175 295.24394;
  --bs: 18.5128% 0.016696 301.919165;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
.advance-select-option{
  width: 100%;
  cursor: pointer;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-radius: var(--rounded-btn, 0.375rem);
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
.avatar.placeholder > div{
  display: flex;
  align-items: center;
  justify-content: center;
}
.btn{
  display: inline-flex;
  height: 2.375rem;
  min-height: 2.375rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  gap: 0.5rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-color: currentColor;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}
.btn-disabled,
  .btn[disabled],
  .btn:disabled{
  pointer-events: none;
}
.btn-circle{
  height: 2.375rem;
  width: 2.375rem;
  border-radius: 9999px;
  padding: 0px;
}
:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])){
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after{
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}
.carousel{
  position: relative;
  min-height: 20rem;
  width: 100%;
  overflow: hidden;
  border-radius: 1rem;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.carousel-body{
  position: absolute;
  bottom: 0px;
  inset-inline-start: 0px;
  top: 0px;
  display: flex;
  flex-wrap: nowrap;
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 700ms;
}
.carousel-prev,
.carousel-next{
  position: absolute;
  top: 0px;
  bottom: 0px;
  display: inline-flex;
  height: 100%;
  width: 10%;
  align-items: center;
  justify-content: center;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
@media not all and (min-width: 640px){

  .carousel-prev,
.carousel-next{
    width: 18%;
  }
}
.carousel-prev{
  inset-inline-start: 0px;
  border-start-start-radius: 1rem;
  border-end-start-radius: 1rem;
}
.carousel-next{
  inset-inline-end: 0px;
  border-start-end-radius: 1rem;
  border-end-end-radius: 1rem;
}
.carousel-pagination{
  position: absolute;
  bottom: 0.75rem;
  inset-inline-end: 0px;
  inset-inline-start: 0px;
  display: flex;
  justify-content: center;
}
.carousel-pagination > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.carousel-pagination:where([dir="rtl"], [dir="rtl"] *) > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 1;
}
.carousel-pagination .carousel-dot{
  height: 0.25rem;
  width: 2.5rem;
  cursor: pointer;
  border-radius: 9999px;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}
.collapse:not(td):not(tr):not(colgroup){
  visibility: visible;
}
.dropdown-menu{
  z-index: 10;
  margin-top: 0.5rem;
  text-wrap: nowrap;
  padding: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  opacity: 0;
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.dropdown-item{
  clear: both;
  display: flex;
  width: 100%;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: inherit;
  border-radius: var(--rounded-btn, 0.375rem);
  background-color: transparent;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
  text-decoration-line: none;
  text-decoration-thickness: 0px;
}
.footer{
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2.5rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.footer > *{
  display: grid;
  place-items: start;
  gap: 0.75rem;
}
@media (min-width: 48rem){

  .footer{
    grid-auto-flow: column;
  }

  .footer-center{
    grid-auto-flow: row dense;
  }
}
.label{
  display: flex;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: space-between;
  padding: 0.25rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.input{
  height: 2.375rem;
  width: 100%;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}
.input::file-selector-button{
  margin-inline-end: 1rem;
  display: inline-flex;
  height: 100%;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1em;
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  border-width: 0px;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  font-weight: 600;
  text-transform: uppercase;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
  text-decoration-line: none;
}
.input[type="number"]::-webkit-inner-spin-button{
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: -0.25rem;
}
.input[type="file"]{
  padding-left: 0px;
  padding-right: 0px;
}
.join{
  display: inline-flex;
  align-items: stretch;
  border-radius: var(--rounded-btn, 0.375rem);
}
.join :where(.join-item){
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}
.join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item{
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}
.join > .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item{
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}
.join > :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item){
  border-end-start-radius: inherit;
  border-start-start-radius: inherit;
}
.join > .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item{
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}
.join > :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item){
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}
@supports not selector(:has(*)){

  :where(.join *){
    border-radius: inherit;
  }
}
@supports selector(:has(*)){

  :where(.join *:has(.join-item)){
    border-radius: inherit;
  }
}
.link{
  display: inline-block;
  cursor: pointer;
  text-decoration-line: underline;
}
@media (hover:hover){

  .label a:hover{
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  }

  .menu li:not(.disabled, :disabled, [disabled]) > *:not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > *:not(ul, .menu-title, .collapse, .btn).active{
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  }

  .radio.is-valid:hover,
.validate .radio:valid:hover{
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
  }

  .radio.is-invalid:hover,
.validate .radio:invalid:hover{
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
  }

  .radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover{
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
  }

  .radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover{
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
  }

  .tabs-bordered > .tab:hover{
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  }

  .tabs-lifted > .tab:hover{
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  }

  .table tr.hover:hover,
  .table tr.hover:nth-child(even):hover{
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .table-striped tr.hover,
  .table-striped tr.hover:nth-child(even){
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }
}
.menu{
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 0.125rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  padding: 0.5rem;
}
.menu :where(li ul){
  position: relative;
  white-space: nowrap;
}
.menu :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)){
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)){
  display: none;
}
:where(.menu li){
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}
:where(.menu li) .badge{
  justify-self: end;
}
.pin-input{
  width: 2.375rem;
  height: 2.375rem;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}
.progress{
  display: flex;
  height: 0.375rem;
  width: 100%;
  overflow: hidden;
  border-radius: 9999px;
  --progress-color: var(--fallback-n,oklch(var(--n)/1));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
}
.progress-bar{
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 9999px;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 500;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 500ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity)));
}
.select{
  display: inline-flex;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  height: 2.375rem;
  width: 100%;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
  background-size: 1.3em;
  background-position: calc(100% - 1rem) center;
  background-repeat: no-repeat;
}
.select[multiple]{
  height: auto;
}
.select.select-floating.select-lg .select-floating-label{
  margin-inline-start: 0.75rem;
}
.select.select-floating.select-lg .select-filled-label{
  margin-inline-start: 1rem;
}
.switch{
  flex-shrink: 0;
  --tglbg: var(--fallback-b3,oklch(var(--b3)/1));
  --handleoffset: 1.35rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --switchhandleborder: 0 0;
  height: 1.5rem;
  width: 2.875rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  overflow: hidden;
  border-radius: 9999px;
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  transition: background,
    box-shadow var(--animation-input, 0.2s) ease-out;
  box-shadow: var(--handleoffsetcalculator) 0 0 4px var(--tglbg) inset,
    0 0 0 4px var(--tglbg) inset,
    var(--switchhandleborder);
}
.tabs{
  display: flex;
  align-items: flex-end;
}
.tabs-lifted:has(.tab-content[class^="rounded-"]) .tab:first-child:not(.tab-active),
  .tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active){
  border-bottom-color: transparent;
}
.tab{
  position: relative;
  display: inline-flex;
  height: 2.375rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  --tab-padding: 1rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
  --tab-bg: var(--fallback-b1,oklch(var(--b1)/1));
  --tab-border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
}
.table{
  position: relative;
  width: 100%;
  border-radius: var(--rounded-box, 0.5rem);
  text-align: left;
  font-size: 0.875rem;
  line-height: 1.25rem;
  overflow-y: auto;
  overflow-x: hidden;
}
.table :where(.table-pin-rows thead tr){
  position: sticky;
  top: 0px;
  z-index: 1;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.table :where(.table-pin-rows tfoot tr){
  position: sticky;
  bottom: 0px;
  z-index: 1;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.table :where(.table-pin-cols tr th){
  position: sticky;
  inset-inline-end: 0px;
  inset-inline-start: 0px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.textarea{
  display: block;
  min-height: 5rem;
  width: 100%;
  flex-shrink: 1;
  resize: none;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  overflow-y: auto;
  overflow-x: hidden;
}
.tooltip{
  display: inline-block;
  text-align: center;
}
.tooltip-content{
  visibility: hidden;
  position: absolute;
  display: inline-block;
  padding: 0.5rem;
  opacity: 0;
  width: -moz-max-content;
  width: max-content;
  z-index: 20;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tooltip-body{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  line-height: 1.25rem;
  --tooltip-color: var(--fallback-bc,oklch(var(--bc)/1));
  --tooltip-text-color: var(--fallback-nc,oklch(var(--nc)/1));
  border-radius: var(--rounded-tooltip, 0.25rem);
  font-size: 0.875rem;
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  background-color: var(--tooltip-color);
  color: var(--tooltip-text-color);
}
.accordion-toggle{
  width: 100%;
  cursor: pointer;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
.accordion-toggle:disabled{
  pointer-events: none;
  opacity: 0.5;
}
.accordion-shadow :where(.accordion-item){
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type{
  margin-top: 0px;
}
.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type{
  margin-bottom: 0px;
}
.accordion-shadow :where(.accordion-item) > *:first-child{
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}
.accordion-shadow :where(.accordion-item) > *:last-child{
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}
.accordion:where(.accordion-bordered) > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}
.accordion:where(.accordion-bordered){
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.accordion-treeview-root .tree-view-space{
  position: relative;
  margin-inline-start: 1rem;
  padding-inline-start: 1rem;
}
.accordion-treeview-root .tree-view-space::before{
  position: absolute;
  inset-inline-start: 0px;
  top: 0px;
  margin-inline-start: -0.125rem;
  height: 100%;
  width: 0.125rem;
  content: var(--tw-content);
  background-color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
.disabled.advance-select-toggle{
  pointer-events: none;
  border-width: 0px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--fallback-n,oklch(var(--n)/0.5));
}
.disabled .advance-select-toggle{
  pointer-events: none;
  border-width: 0px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--fallback-n,oklch(var(--n)/0.5));
}
.advance-select-option:hover{
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}
.advance-select-option:focus{
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.advance-select-option.active,
  .advance-select-option:active{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
select.is-valid + .advance-select-toggle,
.advance-select-tag:has(> .is-valid),
.validate select:has(~ * > .selected) + .advance-select-toggle{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
select.is-valid + .advance-select-toggle:focus,
  select.is-valid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-valid):focus,
  .advance-select-tag:has(> .is-valid):focus-within,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
select.is-invalid + .advance-select-toggle,
.advance-select-tag:has(> .is-invalid),
.validate select:not(:has(~ * > .selected)) + .advance-select-toggle{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
select.is-invalid + .advance-select-toggle:focus,
  select.is-invalid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-invalid):focus,
  .advance-select-tag:has(> .is-invalid):focus-within,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity)));
}
.validate .label:has(+ * > .is-valid) > *,
.validate .advance-select:has(> select.is-valid) ~ .label,
.validate .advance-select:has(> select.is-valid) ~ .label .label-text,
.validate .label:has(~ .advance-select > * > .selected) > *,
.validate .advance-select:has(> * > .selected) ~ .label,
.validate .advance-select:has(> * > .selected) ~ .label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .is-invalid) > *,
.validate .advance-select:has(> select.is-invalid) ~ .label,
.validate .advance-select:has(> select.is-invalid) ~ .label .label-text,
.validate .label:has(+ .advance-select:not(> .selected)) > *,
.validate .advance-select:not(:has(> * > .selected)) ~ .label,
.validate .advance-select:not(:has(> * > .selected)) ~ .label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .is-invalid) ~ * > .success-message,
.validate .advance-select:has(> select.is-valid) ~ * > .success-message,
.validate .advance-select:has(> select.is-valid) ~ .success-message{
  display: block;
}
.validate .label ~ *:has(> select.is-invalid) ~ * > .error-message,
.validate .advance-select:has(> select.is-invalid) ~ * > .error-message,
.validate .advance-select:has(> select.is-invalid) ~ .error-message{
  display: block;
}
.avatar-group :where(.avatar).placeholder > div{
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity)));
}
@media (prefers-reduced-motion: no-preference){

  .btn{
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
  }
}
.btn:active:hover,
  .btn:active:focus{
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}
@supports not (color: oklch(0% 0 0)){

  .btn{
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn:focus-visible{
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn-primary{
    --btn-color: var(--fallback-p);
  }
}
@media (hover: hover){

  .btn:hover{
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)){

    .btn:hover{
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)){

    .btn:hover{
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .btn.glass:hover{
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .btn-soft:hover{
    background-color: var(--fallback-n,oklch(var(--n)/0.3));
  }

  .btn-soft.btn-primary:hover{
    background-color: var(--fallback-p,oklch(var(--p)/0.3));
  }

  .btn-soft.btn-secondary:hover{
    background-color: var(--fallback-s,oklch(var(--s)/0.3));
  }

  .btn-soft.btn-accent:hover{
    background-color: var(--fallback-a,oklch(var(--a)/0.3));
  }

  .btn-soft.btn-success:hover{
    background-color: var(--fallback-su,oklch(var(--su)/0.3));
  }

  .btn-soft.btn-info:hover{
    background-color: var(--fallback-in,oklch(var(--in)/0.3));
  }

  .btn-soft.btn-warning:hover{
    background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  }

  .btn-soft.btn-error:hover{
    background-color: var(--fallback-er,oklch(var(--er)/0.3));
  }

  .btn-outline.btn-primary:hover{
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-text:hover{
    border-color: transparent;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  }

  .btn-text.btn-primary:hover{
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-text.btn-secondary:hover{
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-text.btn-accent:hover{
    background-color: var(--fallback-a,oklch(var(--a)/0.1));
  }

  .btn-text.btn-success:hover{
    background-color: var(--fallback-su,oklch(var(--su)/0.1));
  }

  .btn-text.btn-info:hover{
    background-color: var(--fallback-in,oklch(var(--in)/0.1));
  }

  .btn-text.btn-warning:hover{
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
  }

  .btn-text.btn-error:hover{
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover{
    opacity: 0.5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)){

    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover{
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover{
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0 0 0)){

    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover{
      background-color: var(--fallback-n,oklch(var(--n)/0.1));
    }
  }

  .tab[disabled]:hover{
    pointer-events: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.4;
  }
}
@supports (color: color-mix(in oklab, black, black)){

  .btn:focus-visible{
    background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
    border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black);
  }
}
.btn:focus-visible{
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
}
.btn-primary{
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}
@supports (color: oklch(0% 0 0)){

  .btn-primary{
    --btn-color: var(--p);
  }

  .btn-gradient.btn-primary{
    --light-shade: var(--p);
  }
}
.btn.glass{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}
.btn.glass:hover{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn.glass.btn-active{
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
.btn-soft{
  border-style: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn-soft:hover{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn-soft.btn-active{
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}
.btn-soft:focus-visible{
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
  outline-color: var(--fallback-n,oklch(var(--n)/0.5));
}
.btn-soft.btn-primary{
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}
.btn-soft.btn-primary.btn-active{
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
}
.btn-soft.btn-primary:focus-visible{
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}
.btn-soft.btn-secondary{
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}
.btn-soft.btn-secondary.btn-active{
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
}
.btn-soft.btn-secondary:focus-visible{
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}
.btn-soft.btn-accent{
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}
.btn-soft.btn-accent.btn-active{
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
}
.btn-soft.btn-accent:focus-visible{
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}
.btn-soft.btn-success{
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}
.btn-soft.btn-success.btn-active{
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
}
.btn-soft.btn-success:focus-visible{
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}
.btn-soft.btn-info{
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}
.btn-soft.btn-info.btn-active{
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
}
.btn-soft.btn-info:focus-visible{
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}
.btn-soft.btn-warning{
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}
.btn-soft.btn-warning.btn-active{
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}
.btn-soft.btn-warning:focus-visible{
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}
.btn-soft.btn-error{
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}
.btn-soft.btn-error.btn-active{
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
}
.btn-soft.btn-error:focus-visible{
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}
.btn-outline.btn-primary{
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
.btn-outline.btn-primary.btn-active{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}
.btn-outline.btn-primary:focus-visible{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}
.btn-text{
  border-color: transparent;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn-text:hover{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn-text.btn-active{
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}
.btn-text:focus-visible{
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-color: currentColor;
}
.btn-text.btn-primary{
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
.btn-text.btn-primary.btn-active{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}
.btn-text.btn-primary:focus-visible{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}
.btn-text.btn-secondary{
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity)));
}
.btn-text.btn-secondary.btn-active{
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}
.btn-text.btn-secondary:focus-visible{
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}
.btn-text.btn-accent{
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity)));
}
.btn-text.btn-accent.btn-active{
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}
.btn-text.btn-accent:focus-visible{
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}
.btn-text.btn-success{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.btn-text.btn-success.btn-active{
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}
.btn-text.btn-success:focus-visible{
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}
.btn-text.btn-info{
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity)));
}
.btn-text.btn-info.btn-active{
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}
.btn-text.btn-info:focus-visible{
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}
.btn-text.btn-warning{
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity)));
}
.btn-text.btn-warning.btn-active{
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}
.btn-text.btn-warning:focus-visible{
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}
.btn-text.btn-error{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.btn-text.btn-error.btn-active{
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}
.btn-text.btn-error:focus-visible{
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}
.btn-gradient.btn-primary{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}
.btn-gradient.btn-primary:hover{
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}
.btn-gradient.btn-primary:focus-visible{
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
  border-color: transparent;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled{
  opacity: 0.5;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked){
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
}
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible{
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}
@keyframes button-pop{

  0%{
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40%{
    transform: scale(1.02);
  }

  100%{
    transform: scale(1);
  }
}
.carousel-prev:hover,
.carousel-next:hover{
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
}
.carousel-prev.disabled,
.carousel-next.disabled{
  pointer-events: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}
.checkbox.disabled,
  .checkbox:disabled,
  .checkbox[disabled]{
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  opacity: 0.4;
}
.checkbox.disabled:not(checked), .checkbox:disabled:not(checked), .checkbox[disabled]:not(checked){
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
}
@keyframes checkmark{

  0%{
    background-position-y: 5px;
  }

  50%{
    background-position-y: -2px;
  }

  100%{
    background-position-y: 0;
  }
}
.checkbox.is-valid,
.validate .checkbox:valid{
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
}
.checkbox.is-valid:focus-visible, .validate .checkbox:valid:focus-visible{
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}
.checkbox.is-invalid,
.validate .checkbox:invalid{
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
}
.checkbox.is-invalid:focus-visible, .validate .checkbox:invalid:focus-visible{
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}
.validate .label:has(+ * > .checkbox:valid)>*,

.validate .label~*:has(> .checkbox:valid)~.label .label-text-alt,

.validate .label:has(~ .checkbox:valid)>*,
.validate .label:has(~ .checkbox:valid) :where(.label-text),

.validate .checkbox:valid~.label,
.validate .checkbox:valid~.label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .checkbox:invalid)>*,

.validate .label~*:has(> .checkbox:invalid)~.label .label-text-alt,

.validate .label:has(~ .checkbox:invalid)>*,
.validate .label:has(~ .checkbox:invalid) :where(.label-text),

.validate .checkbox:invalid~.label,
.validate .checkbox:invalid~.label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.validate *:has(> .checkbox:valid) ~ .success-message,
.validate .label ~ *:has(> .checkbox:valid) ~ * > .success-message,
.validate .checkbox:valid ~ * > .success-message,
.validate .checkbox:valid ~ .success-message{
  display: block;
}
.validate *:has(> .checkbox:invalid) ~ .error-message,
.validate .label ~ *:has(> .checkbox:invalid) ~ * > .error-message,
.validate .checkbox:invalid ~ * > .error-message,
.validate .checkbox:invalid ~ .error-message{
  display: block;
}
.nested-collapse-wrapper .collapse.open.nested-collapse,
.nested-collapse-wrapper .collapse-toggle.open.nested-collapse{
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}
.nested-collapse-wrapper .collapse.open > .collapse-icon,
.nested-collapse-wrapper .collapse-toggle.open > .collapse-icon{
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.dropdown-menu > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}
.dropdown-item:hover,
  .dropdown-item:focus,
  .dropdown-item:focus-within,
  .dropdown-item:focus-visible{
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.dropdown-item.active,
  .dropdown-item:active{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
.dropdown-item.disabled,
  .dropdown-item:disabled,
  .dropdown-item[disabled]{
  pointer-events: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.dropdown-item > .label{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.dropdown-item > .label-text{
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
input{
  background-color: transparent;
}
input:focus{
  outline-width: 0px;
  outline-color: transparent;
}
input:focus-visible{
  outline: unset;
}
.input::-moz-placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input::placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input:hover{
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}
.input::file-selector-button:disabled{
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}
.input:focus,
  .input:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity)));
}
.input:-webkit-autofill,
  .input:-webkit-autofill:focus{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
.input[list]::-webkit-calendar-picker-indicator{
  line-height: 1em;
}
.input.disabled,
  .input:disabled,
  .input[disabled]{
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input::-webkit-date-and-time-value{
  text-align: inherit;
}
.input.input-floating.disabled,
    .input.input-floating:disabled,
    .input.input-floating[disabled]{
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.input.input-floating.disabled ~ .input-floating-label, .input.input-floating:disabled ~ .input-floating-label, .input.input-floating[disabled] ~ .input-floating-label{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input.input-filled.disabled,
    .input.input-filled:disabled,
    .input.input-filled[disabled]{
  border-bottom-width: 1px;
}
.input.input-filled.disabled ~ .input-filled-label, .input.input-filled:disabled ~ .input-filled-label, .input.input-filled[disabled] ~ .input-filled-label{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input.input-filled.input-sm:not(:-moz-placeholder-shown){
  padding-top: 0.5rem;
}
.input.input-filled.input-sm:focus,
  .input.input-filled.input-sm:not(:placeholder-shown){
  padding-top: 0.5rem;
}
.input.input-filled:not(:-moz-placeholder-shown), .input.input-filled.input-lg:not(:-moz-placeholder-shown){
  padding-top: 0.75rem;
}
.input.input-filled:focus,
  .input.input-filled.input-lg:focus,
  .input.input-filled:not(:placeholder-shown),
  .input.input-filled.input-lg:not(:placeholder-shown){
  padding-top: 0.75rem;
}
.input-group:has(input.disabled),
  .input-group:has(input:disabled),
  .input-group:has(input[disabled]){
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input-group .input{
  border-width: 0px;
  background-color: transparent;
}
.input-group .input:focus,
    .input-group .input:focus-within{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.input-group .input.disabled,
    .input-group .input:disabled,
    .input-group .input[disabled]{
  background-color: transparent;
}
.input-group-filled .input{
  border-width: 0px;
  background-color: transparent;
}
.input-group-filled .input.disabled,
    .input-group-filled .input:disabled,
    .input-group-filled .input[disabled]{
  background-color: transparent;
}
.input[type="file"].input-floating::file-selector-button{
  border-inline-end-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.input.is-valid,
.validate .input:valid{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
.input.is-valid:focus,
  .input.is-valid:focus-within,
  .validate .input:valid:focus,
  .validate .input:valid:focus-within{
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
.input.is-valid.input-filled:focus,
  .input.is-valid.input-filled:focus-within,
  .validate .input:valid.input-filled:focus,
  .validate .input:valid.input-filled:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.input.is-valid ~ .input-floating-label,
  .input.is-valid ~ .input-filled-label,
  .validate .input:valid ~ .input-floating-label,
  .validate .input:valid ~ .input-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.input.is-valid:focus ~ .input-filled-focused,
  .input.is-valid:focus-within ~ .input-filled-focused,
  .validate .input:valid:focus ~ .input-filled-focused,
  .validate .input:valid:focus-within ~ .input-filled-focused{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
}
.label:has(+ * > .is-valid) > *,

.label ~ *:has(> .is-valid) ~ .label .label-text-alt,

.label:has(~ .is-valid) > *,

.is-valid ~ .label,
.is-valid ~ .label .label-text,

.validate .label:has(+ * > .input:valid) > *,
.validate .label:has(+ * > .input:valid),
.validate .label ~ *:has(> .input:valid) ~ .label .label-text-alt,
.validate .label:has(~ .input:valid) > *,
.validate .label:has(~ .input:valid),
.validate .input:valid ~  .label,
.validate .input:valid ~  .label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.input:focus.is-valid ~ .input-floating-label,
.input:focus.is-valid ~ .input-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.input.is-invalid,
.validate .input:invalid{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
.input.is-invalid:focus,
  .input.is-invalid:focus-within,
  .validate .input:invalid:focus,
  .validate .input:invalid:focus-within{
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity)));
}
.input.is-invalid.input-filled:focus,
  .input.is-invalid.input-filled:focus-within,
  .validate .input:invalid.input-filled:focus,
  .validate .input:invalid.input-filled:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.input.is-invalid ~ .input-floating-label,
  .input.is-invalid ~ .input-filled-label,
  .validate .input:invalid ~ .input-floating-label,
  .validate .input:invalid ~ .input-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.input.is-invalid:focus ~ .input-filled-focused,
  .input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .input:invalid:focus ~ .input-filled-focused,
  .validate .input:invalid:focus-within ~ .input-filled-focused{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
}
.label:has(+ * > .is-invalid) > *,

.label ~ *:has(> .is-invalid) ~ .label .label-text-alt,

.label:has(~ .is-invalid) > *,

.is-invalid ~ .label,
.is-invalid ~ .label .label-text,

.validate .label:has(+ * > .input:invalid) > *,
.validate .label:has(+ * > .input:invalid),
.validate .label ~ *:has(> .input:invalid) ~ .label .label-text-alt,
.validate .label:has(~ .input:invalid) > *,
.validate .input:invalid ~ .label,
.validate .input:invalid ~ .label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.input:focus.is-invalid ~ .input-floating-label,
.input:focus.is-invalid ~ .input-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
*:has(> .is-valid) ~ .success-message,
.validate *:has(> .input:valid) ~ .success-message,

.is-valid ~ .success-message,
.validate .input:valid ~ .success-message{
  display: block;
}
*:has(> .is-invalid) ~ .error-message,
.validate *:has(> .input:invalid) ~ .error-message,

.is-invalid ~ .error-message,
.validate .input:invalid ~ .error-message{
  display: block;
}
.validate .input-group > .input:valid,
.input-group > .input:valid,
.validate .input-group > .input:invalid,
.input-group > .input:invalid,
.validate .input-group > * > .input:valid,
.input-group > * > .input:valid,
.validate .input-group > * > .input:invalid,
.input-group > * > .input:invalid,
.input-group > .input.is-valid,
.input-group > .input.is-invalid,
.input-group > * > .input.is-valid,
.input-group > * > .input.is-invalid{
  border-width: 0px;
}
.validate .input-group > .input:valid:focus-within,
.input-group > .input:valid:focus-within,
.validate .input-group > .input:invalid:focus-within,
.input-group > .input:invalid:focus-within,
.validate .input-group > * > .input:valid:focus-within,
.input-group > * > .input:valid:focus-within,
.validate .input-group > * > .input:invalid:focus-within,
.input-group > * > .input:invalid:focus-within,
.input-group > .input.is-valid:focus-within,
.input-group > .input.is-invalid:focus-within,
.input-group > * > .input.is-valid:focus-within,
.input-group > * > .input.is-invalid:focus-within{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.validate .input-group > .input:valid:focus,
.input-group > .input:valid:focus,
.validate .input-group > .input:invalid:focus,
.input-group > .input:invalid:focus,
.validate .input-group > * > .input:valid:focus,
.input-group > * > .input:valid:focus,
.validate .input-group > * > .input:invalid:focus,
.input-group > * > .input:invalid:focus,
.input-group > .input.is-valid:focus,
.input-group > .input.is-invalid:focus,
.input-group > * > .input.is-valid:focus,
.input-group > * > .input.is-invalid:focus{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.input-group:has(.is-valid),
  .validate .input-group:has(.input:valid){
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
.input-group:has(.is-valid):has(:focus),
    .input-group:has(.is-valid):has(:focus-within),
    .validate .input-group:has(.input:valid):has(:focus),
    .validate .input-group:has(.input:valid):has(:focus-within){
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
.input-group:has(.is-invalid),
  .validate .input-group:has(.input:invalid){
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
.input-group:has(.is-invalid):has(:focus),
    .input-group:has(.is-invalid):has(:focus-within),
    .validate .input-group:has(.input:invalid):has(:focus),
    .validate .input-group:has(.input:invalid):has(:focus-within){
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity)));
}
.input-group-filled:has(.is-valid),
  .validate .input-group-filled:has(.input:valid){
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
.input-group-filled:has(.is-valid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-valid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
}
.input-group-filled:has(.is-invalid),
  .validate .input-group-filled:has(.input:invalid){
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
.input-group-filled:has(.is-invalid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-invalid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
}
.join .btn{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.join > :where(*:not(:first-child)){
  margin-top: 0px;
  margin-bottom: 0px;
  margin-inline-start: -1px;
}
.join > :where(*:not(:first-child)):is(.btn){
  margin-inline-start: calc(var(--border-btn) * -1);
}
.link:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.link:focus-visible{
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.link.disabled,
  .link[disabled],
  .link:disabled{
  pointer-events: none;
  opacity: 0.4;
}
.loading{
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: 1.5rem;
  background-color: currentColor;
  -webkit-mask-size: 100%;
          mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
.loading-spinner{
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
:where(.menu li:empty){
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}
.menu :where(li:not(.dropdown) ul){
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}
.menu :where(li:not(.dropdown) ul):before{
  position: absolute;
  bottom: 0.6rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  content: "";
}
.menu :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)){
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}
.menu li.tooltip > *{
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
}
:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled)){
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn).focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus-visible{
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.menu li:not(.disabled, :disabled, [disabled]) > *:not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > *:not(ul, .menu-title, .collapse, .btn).active{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
.menu li.disabled,
.menu li:disabled,
.menu li[disabled]{
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0.5;
}
.mockup-phone .display{
  overflow: hidden;
  border-radius: 40px;
  margin-top: -25px;
}
.mockup-browser .mockup-browser-toolbar .input{
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-inline-start: 2rem;
  padding-top: 0.125rem;
}
.mockup-browser .mockup-browser-toolbar .input:before{
  content: "";
  position: absolute;
  inset-inline-start: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after{
  content: "";
  position: absolute;
  inset-inline-start: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}
.open.modal{
  transition-duration: 500ms;
}
.open .modal{
  transition-duration: 500ms;
}
.open.modal-dialog{
  transition-duration: 500ms;
}
.open .modal-dialog{
  transition-duration: 500ms;
}
.pin-input::-moz-placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.pin-input::placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.pin-input:hover{
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}
.pin-input:focus,
  .pin-input:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity)));
}
.pin-input.disabled,
  .pin-input:disabled,
  .pin-input[disabled]{
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.pin-input.disabled::-moz-placeholder, .pin-input:disabled::-moz-placeholder, .pin-input[disabled]::-moz-placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}
.pin-input.disabled::placeholder,
  .pin-input:disabled::placeholder,
  .pin-input[disabled]::placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}
.progress-primary{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
  --progress-color: var(--fallback-p,oklch(var(--p)/1));
}
@keyframes indeterminate-progress{

  0%{
    background-position-x: -75%;
  }

  50%{
    background-position-x: 125%;
  }

  100%{
    background-position-x: -75%;
  }
}
@keyframes progress-bar-stripes{

  0%{
    background-position-x: 0.75rem;
  }
}
.radio.disabled,
  .radio:disabled,
  .radio[disabled],
  .radio-inset.disabled,
  .radio-inset:disabled,
  .radio-inset[disabled]{
  pointer-events: none;
  opacity: 0.4;
}
.radio.disabled:hover, .radio:disabled:hover, .radio[disabled]:hover, .radio-inset.disabled:hover, .radio-inset:disabled:hover, .radio-inset[disabled]:hover{
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
@keyframes radiomark{

  0%{
    box-shadow: 0 0 0 9px var(--basebg) inset,
      0 0 0 9px var(--basebg) inset;
  }

  50%{
    box-shadow: 0 0 0 6px var(--basebg) inset,
      0 0 0 6px var(--basebg) inset;
  }

  100%{
    box-shadow: 0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset;
  }
}
@keyframes radioinsetmark{

  0%{
    border-width: 2px;
  }

  50%{
    border-width: 4px;
  }

  100%{
    border-width: 6px;
  }
}
.custom-label-option .label, .custom-option .label{
  padding: 0px;
  font-size: 1rem;
  line-height: 1.375rem;
}
.custom-label-option .label:first-of-type, .custom-option .label:first-of-type{
  padding-bottom: 0.25rem;
}
.custom-label-option .label .label-text, .custom-option .label .label-text{
  font-weight: 500;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid),
  .validate .custom-option:has(.radio:invalid),
  .custom-option:has(.radio.is-invalid){
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid),
  .validate .custom-option:has(.radio:valid),
  .custom-option:has(.radio.is-valid){
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
.validate .custom-option:has(.radio:valid):has(:checked), .custom-option:has(.radio.is-valid):has(:checked){
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid){
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
}
.validate .custom-label-option:has(.radio:valid):has(:checked), .custom-label-option:has(.radio.is-valid):has(:checked){
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid){
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
}
.radio.is-valid,
.validate .radio:valid{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
}
.radio.is-valid:hover,
.validate .radio:valid:hover{
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}
.radio.is-valid:focus-visible, .validate .radio:valid:focus-visible{
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}
.radio.is-valid:checked,
  .radio.is-valid[aria-checked="true"],
  .validate .radio:valid:checked,
  .validate .radio:valid[aria-checked="true"]{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity))) !important;
}
.radio.is-invalid,
.validate .radio:invalid{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
}
.radio.is-invalid:hover,
.validate .radio:invalid:hover{
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}
.radio.is-invalid:focus-visible, .validate .radio:invalid:focus-visible{
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}
.radio.is-invalid:checked,
  .radio.is-invalid[aria-checked="true"],
  .validate .radio:invalid:checked,
  .validate .radio:invalid[aria-checked="true"]{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity))) !important;
}
.validate .label:has(+ * > .radio:valid) > *,

.validate .label ~ *:has(> .radio:valid) ~ .label .label-text-alt,

.validate .label:has(~ .radio:valid) > *,
.validate .label:has(~ .radio:valid) :where(.label-text),

.validate .radio:valid ~  .label,
.validate .radio:valid ~  .label .label-text{
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity))) !important;
}
.validate .label:has(+ * > .radio:invalid) > *,

.validate .label ~ *:has(> .radio:invalid) ~ .label .label-text-alt,

.validate .label:has(~ .radio:invalid) > *,
.validate .label:has(~ .radio:invalid) :where(.label-text),

.validate .radio:invalid ~ .label,
.validate .radio:invalid ~ .label .label-text{
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity))) !important;
}
.validate *:has(> .radio:valid) ~ .success-message,
.validate .label ~ *:has(> .radio:valid) ~ * > .success-message,
.validate .radio:valid ~ * > .success-message,
.validate .radio:valid ~ .success-message{
  display: block !important;
}
.validate *:has(> .radio:invalid) ~ .error-message,
.validate .label ~ *:has(> .radio:invalid) ~ * > .error-message,
.validate .radio:invalid ~ * > .error-message,
.validate .radio:invalid ~ .error-message{
  display: block !important;
}
.radio-inset.is-valid,
.validate .radio-inset:valid{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
}
.radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover{
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}
.radio-inset.is-valid:focus-visible, .validate .radio-inset:valid:focus-visible{
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}
.radio-inset.is-valid:checked,
  .radio-inset.is-valid[aria-checked="true"],
  .validate .radio-inset:valid:checked,
  .validate .radio-inset:valid[aria-checked="true"]{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity))) !important;
}
.radio-inset.is-invalid,
.validate .radio-inset:invalid{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
}
.radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover{
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}
.radio-inset.is-invalid:focus-visible, .validate .radio-inset:invalid:focus-visible{
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}
.radio-inset.is-invalid:checked,
  .radio-inset.is-invalid[aria-checked="true"],
  .validate .radio-inset:invalid:checked,
  .validate .radio-inset:invalid[aria-checked="true"]{
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity))) !important;
}
.validate .label:has(+ * > .radio-inset:valid) > *,

.validate .label ~ *:has(> .radio-inset:valid) ~ .label .label-text-alt,

.validate .label:has(~ .radio-inset:valid) > *,
.validate .label:has(~ .radio-inset:valid) :where(.label-text),

.validate .radio-inset:valid ~  .label,
.validate .radio-inset:valid ~  .label .label-text{
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity))) !important;
}
.validate .label:has(+ * > .radio-inset:invalid) > *,

.validate .label ~ *:has(> .radio-inset:invalid) ~ .label .label-text-alt,

.validate .label:has(~ .radio-inset:invalid) > *,
.validate .label:has(~ .radio-inset:invalid) :where(.label-text),

.validate .radio-inset:invalid ~ .label,
.validate .radio-inset:invalid ~ .label .label-text{
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity))) !important;
}
.validate *:has(> .radio-inset:valid) ~ .success-message,
.validate .label ~ *:has(> .radio-inset:valid) ~ * > .success-message,
.validate .radio-inset:valid ~ * > .success-message,
.validate .radio-inset:valid ~ .success-message{
  display: block !important;
}
.validate *:has(> .radio-inset:invalid) ~ .error-message,
.validate .label ~ *:has(> .radio-inset:invalid) ~ * > .error-message,
.validate .radio-inset:invalid ~ * > .error-message,
.validate .radio-inset:invalid ~ .error-message{
  display: block !important;
}
.range.disabled,
  .range:disabled,
  .range[disabled]{
  pointer-events: none;
  opacity: 0.3;
}
.select:hover{
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}
.select:focus,
  .select:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity)));
}
.select:focus ~ .select-floating-label,
    .select:focus ~ .select-filled-label,
    .select:focus-within ~ .select-floating-label,
    .select:focus-within ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
.select:focus.is-valid ~ .select-floating-label,
    .select:focus.is-valid ~ .select-filled-label,
    .select:focus-within.is-valid ~ .select-floating-label,
    .select:focus-within.is-valid ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.select:focus.is-invalid ~ .select-floating-label,
    .select:focus.is-invalid ~ .select-filled-label,
    .select:focus-within.is-invalid ~ .select-floating-label,
    .select:focus-within.is-invalid ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.select:focus-visible{
  outline: unset;
}
.select.disabled,
  .select:disabled,
  .select[disabled]{
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.select.disabled::-moz-placeholder, .select:disabled::-moz-placeholder, .select[disabled]::-moz-placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.select.disabled::placeholder,
  .select:disabled::placeholder,
  .select[disabled]::placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]){
  overflow-y: auto;
  overflow-x: hidden;
  background-image: none;
}
.select-multiple::-webkit-scrollbar-thumb,
  .select[multiple]::-webkit-scrollbar-thumb,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb{
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}
.select-multiple::-webkit-scrollbar-thumb:hover,
  .select[multiple]::-webkit-scrollbar-thumb:hover,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover{
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}
.select-multiple::-webkit-scrollbar-track,
  .select[multiple]::-webkit-scrollbar-track,
  .select[size].select:not([size="1"])::-webkit-scrollbar-track{
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
}
.select-multiple::-webkit-scrollbar,
  .select[multiple]::-webkit-scrollbar,
  .select[size].select:not([size="1"])::-webkit-scrollbar{
  width: 0.5rem;
}
.select.select-floating.disabled,
    .select.select-floating:disabled,
    .select.select-floating[disabled]{
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.select.select-floating ~ .select-floating-label{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.select.select-filled.disabled,
    .select.select-filled:disabled,
    .select.select-filled[disabled]{
  border-bottom-width: 1px;
}
.select.select-filled ~ .select-filled-label{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
[dir="rtl"] .select{
  background-position: calc(0% + 1.3em) center;
}
.select.select-floating.select-lg ~ .select-floating-label{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.select.select-filled.select-lg ~ .select-filled-label{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.input-group .select{
  border-width: 0px;
}
.input-group .select:focus,
    .input-group .select:focus-within{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.select.is-valid,
.validate .select:valid{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
.select.is-valid:focus,
  .select.is-valid:focus-within,
  .validate .select:valid:focus,
  .validate .select:valid:focus-within{
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
.select.is-valid.select-filled:focus,
  .select.is-valid.select-filled:focus-within,
  .validate .select:valid.select-filled:focus,
  .validate .select:valid.select-filled:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.select.is-valid ~ .select-floating-label,
  .select.is-valid ~ .select-filled-label,
  .validate .select:valid ~ .select-floating-label,
  .validate .select:valid ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.select.is-valid:focus ~ .select-filled-focused,
  .select.is-valid:focus-within ~ .select-filled-focused,
  .validate .select:valid:focus ~ .select-filled-focused,
  .validate .select:valid:focus-within ~ .select-filled-focused{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
}
.select:focus.is-valid ~ .select-floating-label,
.validate .select:focus:is-valid ~ .select-floating-label,
.select:focus.is-valid ~ .select-filled-label,
.validate .select:focus:is-valid ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.select:focus.is-invalid ~ .select-floating-label,
.validate .select:focus:is-invalid ~ .select-floating-label,
.select:focus.is-invalid ~ .select-filled-label,
.validate .select:focus:is-invalid ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.select.is-invalid,
.validate .select:invalid{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
.select.is-invalid:focus,
  .select.is-invalid:focus-within,
  .validate .select:invalid:focus,
  .validate .select:invalid:focus-within{
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity)));
}
.select.is-invalid.select-filled:focus,
  .select.is-invalid.select-filled:focus-within,
  .validate .select:invalid.select-filled:focus,
  .validate .select:invalid.select-filled:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.select.is-invalid ~ .select-floating-label,
  .select.is-invalid ~ .select-filled-label,
  .validate .select:invalid ~ .select-floating-label,
  .validate .select:invalid ~ .select-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.select.is-invalid:focus ~ .select-filled-focused,
  .select.is-invalid:focus-within ~ .select-filled-focused,
  .validate .select:invalid:focus ~ .select-filled-focused,
  .validate .select:invalid:focus-within ~ .select-filled-focused{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
}
.validate .label:has(+ * > .select:valid) > *,
.validate .label:has(+ * > .select:valid),

.validate .label ~ *:has(> .select:valid) ~ .label .label-text-alt,

.validate .label:has(~ .select:valid) > *,
.validate .label:has(~ .select:valid),
.validate .label:has(~ .select:valid) :where(.label-text),

.validate .select:valid ~  .label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .select:invalid) > *,
.validate .label:has(+ * > .select:invalid),

.validate .label ~ *:has(> .select:invalid) ~ .label .label-text-alt,

.validate .label:has(~ .select:invalid) > *,
.validate .label:has(~ .select:invalid),
.validate .label:has(~ .select:invalid) :where(.label-text),

.validate .select:invalid ~ .label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.validate *:has(> .select:valid) ~ .success-message,
.validate .select:valid ~ .success-message{
  display: block;
}
.validate *:has(> .select:invalid) ~ .error-message,
.validate .select:invalid ~ .error-message{
  display: block;
}
@keyframes skeleton{

  from{
    background-position: 150%;
  }

  to{
    background-position: -50%;
  }
}
[dir="rtl"] .switch{
  --handleoffsetcalculator: calc(var(--handleoffset) * 1);
}
.switch:focus-visible{
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}
.switch:checked,
  .switch[checked="true"],
  .switch[aria-checked="true"]{
  background-image: none;
  --handleoffsetcalculator: var(--handleoffset);
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity)));
}
[dir="rtl"] .switch:checked, [dir="rtl"] .switch[checked="true"], [dir="rtl"] .switch[aria-checked="true"]{
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
}
.switch:indeterminate{
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity)));
  box-shadow: calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
      calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
      0 0 0 3px var(--tglbg) inset;
}
[dir="rtl"] .switch:indeterminate{
  box-shadow: calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
        calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
        0 0 0 3px var(--tglbg) inset;
}
.switch.disabled,
  .switch:disabled,
  .switch[disabled]{
  pointer-events: none;
  background-color: transparent;
  opacity: 0.4;
}
.switch-outline.disabled,
    .switch-outline:disabled,
    .switch-outline[disabled]{
  pointer-events: none;
  border-color: currentColor;
  background-color: transparent;
  opacity: 0.3;
  --switchhandleborder: 0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset,
        var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset;
}
.switch.is-valid,
.validate .switch:valid{
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}
.switch.is-valid:focus-visible, .validate .switch:valid:focus-visible{
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}
.switch.is-valid:checked,
  .switch.is-valid[checked="true"],
  .switch.is-valid[aria-checked="true"],
  .validate .switch:valid:checked,
  .validate .switch:valid[checked="true"],
  .validate .switch:valid[aria-checked="true"]{
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}
.switch.is-invalid,
.validate .switch:invalid{
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}
.switch.is-invalid:focus-visible, .validate .switch:invalid:focus-visible{
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}
.switch.is-invalid:checked,
  .switch.is-invalid[checked="true"],
  .switch.is-invalid[aria-checked="true"],
  .validate .switch:invalid:checked,
  .validate .switch:invalid[checked="true"],
  .validate .switch:invalid[aria-checked="true"]{
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}
.validate .label:has(+ * > .switch:valid)>*,

.validate .label~*:has(> .switch:valid)~.label .label-text-alt,

.validate .label:has(~ .switch:valid)>*,
.validate .label:has(~ .switch:valid) :where(.label-text),

.validate .switch:valid~.label,
.validate .switch:valid~.label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .switch:invalid)>*,

.validate .label~*:has(> .switch:invalid)~.label .label-text-alt,

.validate .label:has(~ .switch:invalid)>*,
.validate .label:has(~ .switch:invalid) :where(.label-text),

.validate .switch:invalid~.label,
.validate .switch:invalid~.label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.validate *:has(> .switch:valid) ~ .success-message,
.validate .label ~ *:has(> .switch:valid) ~ * > .success-message,
.validate .switch:valid ~ * > .success-message,
.validate .switch:valid ~ .success-message{
  display: block;
}
.validate *:has(> .switch:invalid) ~ .error-message,
.validate .label ~ *:has(> .switch:invalid) ~ * > .error-message,
.validate .switch:invalid ~ * > .error-message,
.validate .switch:invalid ~ .error-message{
  display: block;
}
.switch-outline.is-valid,
.validate .switch-outline:valid{
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
}
.switch-outline.is-valid:checked,
  .switch-outline.is-valid[checked="true"],
  .switch-outline.is-valid[aria-checked="true"],
  .validate .switch-outline:valid:checked,
  .validate .switch-outline:valid[checked="true"],
  .validate .switch-outline:valid[aria-checked="true"]{
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
}
.switch-outline.is-invalid,
.validate .switch-outline:invalid{
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
}
.switch-outline.is-invalid:checked,
  .switch-outline.is-invalid[checked="true"],
  .switch-outline.is-invalid[aria-checked="true"],
  .validate .switch-outline:invalid:checked,
  .validate .switch-outline:invalid[checked="true"],
  .validate .switch-outline:invalid[aria-checked="true"]{
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
}
.validate .label:has(+ * > .switch-outline:valid)>*,

.validate .label~*:has(> .switch-outline:valid)~.label .label-text-alt,

.validate .label:has(~ .switch-outline:valid)>*,
.validate .label:has(~ .switch-outline:valid) :where(.label-text),

.validate .switch-outline:valid~.label,
.validate .switch-outline:valid~.label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .switch-outline:invalid)>*,

.validate .label~*:has(> .switch-outline:invalid)~.label .label-text-alt,

.validate .label:has(~ .switch-outline:invalid)>*,
.validate .label:has(~ .switch-outline:invalid) :where(.label-text),

.validate .switch-outline:invalid~.label,
.validate .switch-outline:invalid~.label .label-text{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.validate *:has(> .switch-outline:valid) ~ .success-message,
.validate .label ~ *:has(> .switch-outline:valid) ~ * > .success-message,
.validate .switch-outline:valid ~ * > .success-message,
.validate .switch-outline:valid ~ .success-message{
  display: block;
}
.validate *:has(> .switch-outline:invalid) ~ .error-message,
.validate .label ~ *:has(> .switch-outline:invalid) ~ * > .error-message,
.validate .switch-outline:invalid ~ * > .error-message,
.validate .switch-outline:invalid ~ .error-message{
  display: block;
}
.tabs-lifted > .tab:focus-visible{
  border-end-end-radius: 0;
  border-end-start-radius: 0;
}
.tab.tab-active:not([disabled]){
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  --tw-text-opacity: 1;
}
.tab:focus,
  .tab:focus-visible{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.tab[disabled]{
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
  --tw-border-opacity: 0.3;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: 0.4;
}
.tabs-bordered > .tab{
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  border-style: solid;
  border-bottom-width: calc(var(--tab-border, 1px) + 1px);
}
.tabs-lifted > .tab{
  border: var(--tab-border, 1px) solid transparent;
  border-width: 0 0 var(--tab-border, 1px) 0;
  border-radius: var(--tab-radius, 0.375rem);
  border-bottom-color: var(--tab-border-color);
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
  padding-top: var(--tab-border, 1px);
}
.tabs-lifted > .tab.tab-active:not([disabled]){
  background-color: var(--tab-bg);
  border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
  border-color: var(--tab-border-color);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  padding-inline-start: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-inline-end: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-bottom: var(--tab-border, 1px);
  padding-top: 0;
}
.tabs-lifted > .tab.tab-active:not([disabled]):before{
  z-index: 1;
  content: "";
  display: block;
  position: absolute;
  width: calc(100% + var(--tab-radius, 0.375rem) * 2);
  height: var(--tab-radius, 0.375rem);
  bottom: 0;
  background-size: var(--tab-radius, 0.375rem);
  background-position: top left,
        top right;
  background-repeat: no-repeat;
  --tab-grad: calc(69% - var(--tab-border, 1px));
  --radius-start: radial-gradient(
        circle at top left,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
  background-image: var(--radius-start), var(--radius-end);
}
.tabs-lifted > .tab.tab-active:not([disabled]):first-child:before{
  background-image: var(--radius-end);
  background-position: top right;
}
[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):first-child:before{
  background-image: var(--radius-start);
  background-position: top left;
}
.tabs-lifted > .tab.tab-active:not([disabled]):last-child:before{
  background-image: var(--radius-start);
  background-position: top left;
}
[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):last-child:before{
  background-image: var(--radius-end);
  background-position: top right;
}
.table:where([dir="rtl"], [dir="rtl"] *){
  text-align: right;
}
.table::-webkit-scrollbar-thumb{
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}
.table::-webkit-scrollbar-thumb:hover{
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}
.table::-webkit-scrollbar-track{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
}
.table::-webkit-scrollbar{
  width: 0.5rem;
}
.table :where(th, td){
  text-wrap: nowrap;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 0.55rem;
  padding-bottom: 0.55rem;
  vertical-align: middle;
  font-size: 1rem;
  line-height: 1.375rem;
}
.table :where(th){
  text-wrap: nowrap;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  text-transform: uppercase;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
  letter-spacing: 1px;
}
.table tr.active,
  .table tr.active:nth-child(even),
  .table-striped tbody tr:nth-child(even){
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}
.table-striped tr.active,
    .table-striped tr.active:nth-child(even),
    .table-striped-striped tbody tr:nth-child(even){
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}
.table :where(thead, tbody) :where(tr:not(:last-child)),
    .table :where(thead, tbody) :where(tr:first-child:last-child){
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}
.table :where(thead, tfoot, th){
  white-space: nowrap;
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
textarea{
  background-color: transparent;
}
textarea:focus{
  outline-width: 0px;
  outline-color: transparent;
}
textarea:focus-visible{
  outline: unset;
}
.textarea::-moz-placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.textarea::placeholder{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.textarea::-webkit-scrollbar-thumb{
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}
.textarea::-webkit-scrollbar-thumb:hover{
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}
.textarea::-webkit-scrollbar-track{
  border-radius: 9999px;
  background-color: transparent;
}
.textarea::-webkit-scrollbar{
  width: 0.5rem;
}
.textarea:focus,
  s .textarea:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity)));
}
.textarea.disabled,
  .textarea:disabled,
  .textarea[disabled]{
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.textarea.textarea-floating.disabled,
    .textarea.textarea-floating:disabled,
    .textarea.textarea-floating[disabled]{
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.textarea.textarea-floating.disabled ~ .textarea-floating-label, .textarea.textarea-floating:disabled ~ .textarea-floating-label, .textarea.textarea-floating[disabled] ~ .textarea-floating-label{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.textarea.textarea-filled.disabled,
    .textarea.textarea-filled:disabled,
    .textarea.textarea-filled[disabled]{
  border-bottom-width: 1px;
}
.textarea.textarea-filled.disabled ~ .textarea-filled-label, .textarea.textarea-filled:disabled ~ .textarea-filled-label, .textarea.textarea-filled[disabled] ~ .textarea-filled-label{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.input-group .textarea{
  border-width: 0px;
}
.input-group .textarea:focus,
    .input-group .textarea:focus-within{
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.textarea.is-valid,
.validate .textarea:valid{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
.textarea.is-valid:focus,
  .textarea.is-valid:focus-within,
  .validate .textarea:valid:focus,
  .validate .textarea:valid:focus-within{
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity)));
}
.textarea.is-valid.textarea-filled:focus,
  .textarea.is-valid.textarea-filled:focus-within,
  .validate .textarea:valid.textarea-filled:focus,
  .validate .textarea:valid.textarea-filled:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.textarea.is-valid ~ .textarea-floating-label,
  .textarea.is-valid ~ .textarea-filled-label,
  .validate .textarea:valid ~ .textarea-floating-label,
  .validate .textarea:valid ~ .textarea-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.textarea.is-valid:focus ~ .textarea-filled-focused,
  .textarea.is-valid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:valid:focus ~ .textarea-filled-focused,
  .validate .textarea:valid:focus-within ~ .textarea-filled-focused{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
}
.textarea:focus.is-valid ~ .textarea-floating-label,
.validate .textarea:focus:is-valid ~ .textarea-floating-label,
.textarea:focus.is-valid ~ .textarea-filled-label,
.validate .textarea:focus:is-valid ~ .textarea-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.textarea:focus.is-invalid ~ .textarea-floating-label,
.validate .textarea:focus:is-invalid ~ .textarea-floating-label,
.textarea:focus.is-invalid ~ .textarea-filled-label,
.validate .textarea:focus:is-invalid ~ .textarea-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.textarea.is-invalid,
.validate .textarea:invalid{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
.textarea.is-invalid:focus,
  .textarea.is-invalid:focus-within,
  .validate .textarea:invalid:focus,
  .validate .textarea:invalid:focus-within{
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity)));
}
.textarea.is-invalid.textarea-filled:focus,
  .textarea.is-invalid.textarea-filled:focus-within,
  .validate .textarea:invalid.textarea-filled:focus,
  .validate .textarea:invalid.textarea-filled:focus-within{
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}
.textarea.is-invalid ~ .textarea-floating-label,
  .textarea.is-invalid ~ .textarea-filled-label,
  .validate .textarea:invalid ~ .textarea-floating-label,
  .validate .textarea:invalid ~ .textarea-filled-label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.textarea.is-invalid:focus ~ .textarea-filled-focused,
  .textarea.is-invalid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus-within ~ .textarea-filled-focused{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
}
.validate .label:has(+ * > .textarea:valid) > *,
.validate .label:has(+ * > .textarea:valid),

.validate .label ~ *:has(> .textarea:valid) ~ .label .label-text-alt,

.validate .label:has(~ .textarea:valid) > *,
.validate .label:has(~ .textarea:valid),
.validate .label:has(~ .textarea:valid) :where(.label-text),

.validate .textarea:valid ~  .label{
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
}
.validate .label:has(+ * > .textarea:invalid) > *,
.validate .label:has(+ * > .textarea:invalid),

.validate .label ~ *:has(> .textarea:invalid) ~ .label .label-text-alt,

.validate .label:has(~ .textarea:invalid) > *,
.validate .label:has(~ .textarea:invalid),
.validate .label:has(~ .textarea:invalid) :where(.label-text),

.validate .textarea:invalid ~ .label{
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
}
.validate *:has(> .textarea:valid) ~ * > .success-message,
.validate *:has(> .textarea:valid) ~ .success-message,
.validate .textarea:valid ~ * > .success-message,
.validate .textarea:valid ~ .success-message{
  display: block;
}
.validate *:has(> .textarea:invalid) ~ * > .error-message,
.validate *:has(> .textarea:invalid) ~ .error-message,
.validate .textarea:invalid ~ * > .error-message,
.validate .textarea:invalid ~ .error-message{
  display: block;
}
.advance-select-xs ~ .advance-select-menu .advance-select-option{
  width: 100%;
  cursor: pointer;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}
.advance-select-sm ~ .advance-select-menu .advance-select-option{
  width: 100%;
  cursor: pointer;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}
.advance-select-lg ~ .advance-select-menu .advance-select-option{
  width: 100%;
  cursor: pointer;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}
.btn-sm{
  height: 1.875rem;
  min-height: 1.875rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.btn-square:where(.btn-sm){
  height: 1.875rem;
  width: 1.875rem;
  padding: 0px;
}
.btn-circle:where(.btn-xs){
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 9999px;
  padding: 0px;
}
.btn-circle:where(.btn-sm){
  height: 1.875rem;
  width: 1.875rem;
  border-radius: 9999px;
  padding: 0px;
}
.btn-circle:where(.btn-lg){
  height: 2.875rem;
  width: 2.875rem;
  border-radius: 9999px;
  padding: 0px;
}
.join.join-vertical{
  flex-direction: column;
}
.join.join-vertical .join-item:first-child:not(:last-child),
  .join.join-vertical *:first-child:not(:last-child) .join-item{
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
}
.join.join-vertical .join-item:last-child:not(:first-child),
  .join.join-vertical *:last-child:not(:first-child) .join-item{
  border-start-start-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}
.menu-horizontal > li:not(.menu-title) > .collapse > ul{
  position: absolute;
}
.menu-vertical > li:not(.menu-title) > .collapse > ul{
  position: relative;
}
.tabs-lg :where(.tab){
  height: 2.875rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  --tab-padding: 1.25rem;
}
.tabs-sm :where(.tab){
  height: 1.875rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tab-padding: 0.75rem;
}
.tabs-xs :where(.tab){
  height: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tab-padding: 0.5rem;
}
.join.join-vertical > :where(*:not(:first-child)){
  margin-left: 0px;
  margin-right: 0px;
  margin-top: -1px;
}
.menu-horizontal > li:not(.menu-title) > .collapse > ul{
  margin-inline-start: 0px;
  margin-top: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-inline-end: 0.5rem;
}
.menu-horizontal > li > .collapse > ul:before{
  content: none;
}
:where(.menu-horizontal > li:not(.menu-title) > .collapse > ul){
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.menu-vertical > li:not(.menu-title) > .collapse > ul{
  margin-inline-start: 1rem;
  margin-top: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-inline-end: 0px;
}
.tabs-bordered.tabs-vertical > .tab{
  width: 100%;
  justify-content: flex-start;
  border-bottom-width: 0px;
  border-inline-end-width: calc(var(--tab-border, 1px) + 1px);
}
.collapse{
  visibility: collapse;
}
.static{
  position: static;
}
.fixed{
  position: fixed;
}
.absolute{
  position: absolute;
}
.relative{
  position: relative;
}
.sticky{
  position: sticky;
}
.inset-0{
  inset: 0px;
}
.bottom-full{
  bottom: 100%;
}
.left-50\%{
  left: 50%;
}
.left-55\%{
  left: 55%;
}
.left-95\%{
  left: 95%;
}
.left-96{
  left: 24rem;
}
.top-0{
  top: 0px;
}
.top-30\%{
  top: 30%;
}
.top-35\%{
  top: 35%;
}
.top-45\%{
  top: 45%;
}
.top-50\%{
  top: 50%;
}
.top-55\%{
  top: 55%;
}
.top-65\%{
  top: 65%;
}
.top-full{
  top: 100%;
}
.top-60{
  top: 15rem;
}
.top-60\%{
  top: 60%;
}
.mx-2{
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mx-20{
  margin-left: 5rem;
  margin-right: 5rem;
}
.my-1{
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.-ml-2{
  margin-left: -0.5rem;
}
.-ml-3{
  margin-left: -0.75rem;
}
.mb-0{
  margin-bottom: 0px;
}
.mb-0\.5{
  margin-bottom: 0.125rem;
}
.mb-1{
  margin-bottom: 0.25rem;
}
.mb-2{
  margin-bottom: 0.5rem;
}
.ml-14{
  margin-left: 3.5rem;
}
.ml-2{
  margin-left: 0.5rem;
}
.ml-20{
  margin-left: 5rem;
}
.ml-4{
  margin-left: 1rem;
}
.ml-5{
  margin-left: 1.25rem;
}
.mr-4{
  margin-right: 1rem;
}
.mt-1{
  margin-top: 0.25rem;
}
.mt-10{
  margin-top: 2.5rem;
}
.mt-16{
  margin-top: 4rem;
}
.mt-4{
  margin-top: 1rem;
}
.mt-8{
  margin-top: 2rem;
}
.mt-2{
  margin-top: 0.5rem;
}
.mt-24{
  margin-top: 6rem;
}
.mt-20{
  margin-top: 5rem;
}
.block{
  display: block;
}
.inline-block{
  display: inline-block;
}
.flex{
  display: flex;
}
.table{
  display: table;
}
.hidden{
  display: none;
}
.size-10{
  width: 2.5rem;
  height: 2.5rem;
}
.size-20{
  width: 5rem;
  height: 5rem;
}
.size-4{
  width: 1rem;
  height: 1rem;
}
.size-5{
  width: 1.25rem;
  height: 1.25rem;
}
.size-8{
  width: 2rem;
  height: 2rem;
}
.h-2{
  height: 0.5rem;
}
.h-32{
  height: 8rem;
}
.min-h-max{
  min-height: -moz-max-content;
  min-height: max-content;
}
.min-h-screen{
  min-height: 100vh;
}
.w-10{
  width: 2.5rem;
}
.w-10\%{
  width: 10%;
}
.w-full{
  width: 100%;
}
.min-w-min{
  min-width: -moz-min-content;
  min-width: min-content;
}
.max-w-full{
  max-width: 100%;
}
.flex-shrink-0{
  flex-shrink: 0;
}
.shrink-0{
  flex-shrink: 0;
}
.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.cursor-pointer{
  cursor: pointer;
}
.resize{
  resize: both;
}
.flex-nowrap{
  flex-wrap: nowrap;
}
.items-center{
  align-items: center;
}
.justify-center{
  justify-content: center;
}
.justify-between{
  justify-content: space-between;
}
.gap-1{
  gap: 0.25rem;
}
.gap-x-2{
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}
.gap-x-3{
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}
.overflow-hidden{
  overflow: hidden;
}
.overflow-x-auto{
  overflow-x: auto;
}
.overflow-y-auto{
  overflow-y: auto;
}
.truncate{
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.whitespace-nowrap{
  white-space: nowrap;
}
.rounded-box{
  border-radius: var(--rounded-box, 0.5rem);
}
.rounded-btn{
  border-radius: var(--rounded-btn, 0.375rem);
}
.rounded-lg{
  border-radius: 0.5rem;
}
.rounded-md{
  border-radius: 0.375rem;
}
.border{
  border-width: 1px;
}
.border-2{
  border-width: 2px;
}
.border-base-content\/20{
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}
.border-base-content\/40{
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
.border-black{
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}
.bg-base-100{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}
.bg-base-shadow\/70{
  background-color: var(--fallback-bs,oklch(var(--bs)/0.7));
}
.bg-violet-400{
  --tw-bg-opacity: 1;
  background-color: rgb(167 139 250 / var(--tw-bg-opacity));
}
.bg-gradient-to-r{
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-white{
  --tw-gradient-from: #ffffff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.to-rose-400{
  --tw-gradient-to: #fb7185 var(--tw-gradient-to-position);
}
.fill-black{
  fill: #000000;
}
.p-0{
  padding: 0px;
}
.p-0\.5{
  padding: 0.125rem;
}
.p-4{
  padding: 1rem;
}
.px-2{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-3{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.pb-32{
  padding-bottom: 8rem;
}
.pt-3{
  padding-top: 0.75rem;
}
.text-left{
  text-align: left;
}
.align-bottom{
  vertical-align: bottom;
}
.font-cursiva{
  font-family: Dancing Script;
}
.text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-base{
  font-size: 1rem;
  line-height: 1.375rem;
}
.text-lg{
  font-size: 1.125rem;
  line-height: 1.5rem;
}
.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xs{
  font-size: 0.75rem;
  line-height: 1rem;
}
.font-bold{
  font-weight: 700;
}
.font-medium{
  font-weight: 500;
}
.font-normal{
  font-weight: 400;
}
.font-semibold{
  font-weight: 600;
}
.uppercase{
  text-transform: uppercase;
}
.lowercase{
  text-transform: lowercase;
}
.text-base-content\/50{
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.text-base-content\/80{
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.text-base-content\/90{
  color: var(--fallback-bc,oklch(var(--bc)/0.9));
}
.text-black{
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-primary{
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}
.opacity-0{
  opacity: 0;
}
.shadow-lg{
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.blur{
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter{
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.delay-150{
  transition-delay: 150ms;
}
.duration-1000{
  transition-duration: 1000ms;
}
.duration-500{
  transition-duration: 500ms;
}
.duration-700{
  transition-duration: 700ms;
}
.ease-in-out{
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.\[--placement\:right\]{
  --placement: right;
}
.\[--prevent-popper\:true\]{
  --prevent-popper: true;
}
.\[--strategy\:absolute\]{
  --strategy: absolute;
}
.\[--strategy\:relative\]{
  --strategy: relative;
}
.\[--trigger\:click\]{
  --trigger: click;
}

.boton{
  margin-top: 1rem;
  margin-right: 1rem;
  display: block;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-delay: 150ms;
  transition-duration: 700ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.boton:hover{
  --tw-translate-y: -0.25rem;
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-bottom-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(124 58 237 / var(--tw-text-opacity));
}

@media (min-width: 1024px){

  .boton{
    margin-top: 0px;
    display: inline-block;
  }
}

@media (hover:hover){

  
.menu li:not(.disabled, :disabled, [disabled]) > .combo-box-selected\:active*:not(ul, .menu-title, .collapse, .btn){
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  }
}

.selected .combo-box-selected\:active.advance-select-option{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}

.selected .combo-box-selected\:active.dropdown-item{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}


.menu li:not(.disabled, :disabled, [disabled]) > .selected .combo-box-selected\:menu*:not(ul, .menu-title, .collapse, .btn){
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}

.table .selected .combo-box-selected\:activetr,
  .table .selected .combo-box-selected\:activetr:nth-child(even){
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped .selected .combo-box-selected\:activetr,
    .table-striped .selected .combo-box-selected\:activetr:nth-child(even){
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

@media (hover:hover){

  
.menu li:not(.disabled, :disabled, [disabled]) > .combo-box-selected\:active*:not(ul, .menu-title, .collapse, .btn){
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
  }
}

.selected.combo-box-selected\:active.advance-select-option{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}

.selected.combo-box-selected\:active.dropdown-item{
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}


.menu li:not(.disabled, :disabled, [disabled]) > .selected.combo-box-selected\:menu*:not(ul, .menu-title, .collapse, .btn){
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
}

.table tr.selected.combo-box-selected\:active,
  .table tr.selected.combo-box-selected\:active:nth-child(even){
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped tr.selected.combo-box-selected\:active,
    .table-striped tr.selected.combo-box-selected\:active:nth-child(even){
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.complete .file-upload-complete\:progress-success{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

.complete.file-upload-complete\:progress-success{
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

.hover\:-translate-y-1:hover{
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-110:hover{
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-150:hover{
  --tw-scale-x: 1.5;
  --tw-scale-y: 1.5;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:bg-pink-300:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(249 168 212 / var(--tw-bg-opacity));
}

.focus\:border-primary:focus{
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
}

.focus\:ring-1:focus{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-primary:focus{
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity)));
}

@keyframes fade-down{

  0%{
    opacity: 0;
    transform: translateY(-2rem);
  }

  100%{
    opacity: 1;
    transform: translateY(0);
  }
}

.intersect\:animate-fade-down:not([no-intersect]){
  animation: fade-down var(--tw-animate-duration, 1s) var(--tw-animate-easing, ease) var(--tw-animate-delay, 0s) var(--tw-animate-iteration, 1) var(--tw-animate-fill, both);
}

@keyframes fade-left{

  0%{
    opacity: 0;
    transform: translateX(2rem);
  }

  100%{
    opacity: 1;
    transform: translateX(0);
  }
}

.intersect\:animate-fade-left:not([no-intersect]){
  animation: fade-left var(--tw-animate-duration, 1s) var(--tw-animate-easing, ease) var(--tw-animate-delay, 0s) var(--tw-animate-iteration, 1) var(--tw-animate-fill, both);
}

@keyframes fade-right{

  0%{
    opacity: 0;
    transform: translateX(-2rem);
  }

  100%{
    opacity: 1;
    transform: translateX(0);
  }
}

.intersect\:animate-fade-right:not([no-intersect]){
  animation: fade-right var(--tw-animate-duration, 1s) var(--tw-animate-easing, ease) var(--tw-animate-delay, 0s) var(--tw-animate-iteration, 1) var(--tw-animate-fill, both);
}

.intersect\:animate-duration-1000:not([no-intersect]){
  --tw-animate-duration: 1000ms;
  animation-duration: var(--tw-animate-duration);
}

.tooltip.show .tooltip-shown\:visible{
  visibility: visible;
}

.tooltip.show .tooltip-shown\:opacity-100{
  opacity: 1;
}

.selected .combo-box-selected\:block{
  display: block;
}

.selected.combo-box-selected\:block{
  display: block;
}

@media (min-width: 320px){

  .xs\:relative{
    position: relative;
  }

  .xs\:-top-4{
    top: -1rem;
  }

  .xs\:-top-5{
    top: -1.25rem;
  }

  .xs\:-top-6{
    top: -1.5rem;
  }

  .xs\:left-10{
    left: 2.5rem;
  }

  .xs\:left-20{
    left: 5rem;
  }

  .xs\:top-2{
    top: 0.5rem;
  }

  .xs\:top-4{
    top: 1rem;
  }

  .xs\:top-5{
    top: 1.25rem;
  }

  .xs\:-mr-3{
    margin-right: -0.75rem;
  }

  .xs\:mb-1{
    margin-bottom: 0.25rem;
  }

  .xs\:mb-2{
    margin-bottom: 0.5rem;
  }

  .xs\:ml-2{
    margin-left: 0.5rem;
  }

  .xs\:mr-2{
    margin-right: 0.5rem;
  }

  .xs\:mr-5{
    margin-right: 1.25rem;
  }

  .xs\:mt-2{
    margin-top: 0.5rem;
  }

  .xs\:mr-4{
    margin-right: 1rem;
  }

  .xs\:flex{
    display: flex;
  }

  .xs\:grid{
    display: grid;
  }

  .xs\:size-16{
    width: 4rem;
    height: 4rem;
  }

  .xs\:bg-pasto{
    --tw-bg-opacity: 1;
    background-color: rgb(164 178 132 / var(--tw-bg-opacity));
  }

  .xs\:text-center{
    text-align: center;
  }

  .xs\:text-right{
    text-align: right;
  }

  .xs\:font-cursiva{
    font-family: Dancing Script;
  }

  .xs\:text-2xl{
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .xs\:text-4xl{
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .xs\:font-bold{
    font-weight: 700;
  }
}

@media (min-width: 1024px){

  .lg\:absolute{
    position: absolute;
  }

  .lg\:relative{
    position: relative;
  }

  .lg\:-left-10{
    left: -2.5rem;
  }

  .lg\:-left-14{
    left: -3.5rem;
  }

  .lg\:-top-0{
    top: -0px;
  }

  .lg\:-top-72{
    top: -18rem;
  }

  .lg\:-top-80{
    top: -20rem;
  }

  .lg\:-top-9{
    top: -2.25rem;
  }

  .lg\:left-10{
    left: 2.5rem;
  }

  .lg\:left-20{
    left: 5rem;
  }

  .lg\:left-25{
    left: 6.25rem;
  }

  .lg\:left-25\%{
    left: 25%;
  }

  .lg\:left-3{
    left: 0.75rem;
  }

  .lg\:left-35\%{
    left: 35%;
  }

  .lg\:left-45\%{
    left: 45%;
  }

  .lg\:left-60{
    left: 15rem;
  }

  .lg\:left-60\%{
    left: 60%;
  }

  .lg\:left-8{
    left: 2rem;
  }

  .lg\:left-96{
    left: 24rem;
  }

  .lg\:top-10{
    top: 2.5rem;
  }

  .lg\:top-16{
    top: 4rem;
  }

  .lg\:top-20{
    top: 5rem;
  }

  .lg\:top-24{
    top: 6rem;
  }

  .lg\:top-4{
    top: 1rem;
  }

  .lg\:top-8{
    top: 2rem;
  }

  .lg\:top-40{
    top: 10rem;
  }

  .lg\:top-44{
    top: 11rem;
  }

  .lg\:top-40\%{
    top: 40%;
  }

  .lg\:top-50\%{
    top: 50%;
  }

  .lg\:top-56{
    top: 14rem;
  }

  .lg\:top-72{
    top: 18rem;
  }

  .lg\:top-80{
    top: 20rem;
  }

  .lg\:top-96{
    top: 24rem;
  }

  .lg\:mx-16{
    margin-left: 4rem;
    margin-right: 4rem;
  }

  .lg\:my-0{
    margin-top: 0px;
    margin-bottom: 0px;
  }

  .lg\:my-20{
    margin-top: 5rem;
    margin-bottom: 5rem;
  }

  .lg\:-mt-28{
    margin-top: -7rem;
  }

  .lg\:-mt-6{
    margin-top: -1.5rem;
  }

  .lg\:mb-0{
    margin-bottom: 0px;
  }

  .lg\:ml-10{
    margin-left: 2.5rem;
  }

  .lg\:ml-20{
    margin-left: 5rem;
  }

  .lg\:ml-4{
    margin-left: 1rem;
  }

  .lg\:ml-45\%{
    margin-left: 45%;
  }

  .lg\:mr-44{
    margin-right: 11rem;
  }

  .lg\:mt-10{
    margin-top: 2.5rem;
  }

  .lg\:mt-2{
    margin-top: 0.5rem;
  }

  .lg\:mt-4{
    margin-top: 1rem;
  }

  .lg\:flex{
    display: flex;
  }

  .lg\:size-48{
    width: 12rem;
    height: 12rem;
  }

  .lg\:size-auto{
    width: auto;
    height: auto;
  }

  .lg\:h-52{
    height: 13rem;
  }

  .lg\:h-56{
    height: 14rem;
  }

  .lg\:h-96{
    height: 24rem;
  }

  .lg\:w-35\%{
    width: 35%;
  }

  .lg\:w-40{
    width: 10rem;
  }

  .lg\:w-40\%{
    width: 40%;
  }

  .lg\:w-50\%{
    width: 50%;
  }

  .lg\:w-70\%{
    width: 70%;
  }

  .lg\:w-72{
    width: 18rem;
  }

  .lg\:w-full{
    width: 100%;
  }

  .lg\:items-center{
    align-items: center;
  }

  .lg\:rounded-full{
    border-radius: 9999px;
  }

  .lg\:border-2{
    border-width: 2px;
  }

  .lg\:border-4{
    border-width: 4px;
  }

  .lg\:border-double{
    border-style: double;
  }

  .lg\:border-black{
    --tw-border-opacity: 1;
    border-color: rgb(0 0 0 / var(--tw-border-opacity));
  }

  .lg\:border-violet-500{
    --tw-border-opacity: 1;
    border-color: rgb(139 92 246 / var(--tw-border-opacity));
  }

  .lg\:bg-rose-300{
    --tw-bg-opacity: 1;
    background-color: rgb(253 164 175 / var(--tw-bg-opacity));
  }

  .lg\:p-4{
    padding: 1rem;
  }

  .lg\:p-6{
    padding: 1.5rem;
  }

  .lg\:text-center{
    text-align: center;
  }

  .lg\:font-cursiva{
    font-family: Dancing Script;
  }

  .lg\:text-2xl{
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .lg\:text-3xl{
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

  .lg\:text-4xl{
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .lg\:text-6xl{
    font-size: 3.75rem;
    line-height: 1;
  }

  .lg\:text-xl{
    font-size: 1.25rem;
    line-height: 1.625rem;
  }

  .lg\:shadow-2xl{
    --tw-shadow: 0 16px 30px -6px var(--fallback-bs,oklch(var(--bs)/0.42));
    --tw-shadow-colored: 0 16px 30px -6px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .lg\:\[--placement\:right\]{
    --placement: right;
  }
}
